SET NOCOUNT ON

USE master
GO

/*
Creazione DB esercizio 1 del libro (pag. 301)
*/
IF EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = 'DB_ES1_LIBRO')  
	DROP DATABASE [DB_ES1_LIBRO]
GO

CREATE database [DB_ES1_LIBRO]
GO
USE [DB_ES1_LIBRO]
GO

/*
Creo gli script delle tabelle
*/

create table DOCENTE(
CFDOC char(16) NOT NULL primary key,
NOME varchar(45) NOT NULL,
COGNOME varchar(45) NOT NULL)
GO

CREATE TABLE STUDENTE(
CFSTUD CHAR(16) NOT NULL PRIMARY KEY,
NOME VARCHAR(45) NOT NULL,
COGNOME VARCHAR(45) NOT NULL)
GO

CREATE TABLE ARGOMENTO(
CODARG CHAR(10) NOT NULL PRIMARY KEY,
DESCRIZIONE VARCHAR(45) NOT NULL)
GO

CREATE TABLE LEZIONE(
CODARG CHAR(10) NOT NULL FOREIGN KEY REFERENCES ARGOMENTO,
DATA DATETIME NOT NULL, /*se si usa SQLServer 2008 il formato può essere anche DATE*/
CFDOC CHAR(16) NOT NULL FOREIGN KEY REFERENCES DOCENTE,
NUMSTUDENTI INT NOT NULL
PRIMARY KEY(CODARG,DATA),
CONSTRAINT AK_LEZIONE UNIQUE(DATA,CFDOC))
GO

CREATE TABLE INTERROGAZIONE(
CODARG CHAR(10) NOT NULL ,
DATA DATETIME NOT NULL, /*se si usa SQLServer 2008 il formato può essere anche DATE*/
CFSTUD CHAR(16) NOT NULL FOREIGN KEY REFERENCES STUDENTE,
VOTO INT
PRIMARY KEY(CODARG,DATA,CFSTUD))
GO



/*
Inserisco dei dati nelle tabelle
*/

INSERT INTO DOCENTE VALUES('01','OLMES','BISI')
INSERT INTO DOCENTE VALUES('02','LUISA','MALAGUTI')
INSERT INTO DOCENTE VALUES('03','LAURA','PO')
INSERT INTO DOCENTE VALUES('04','DIEGO','MACRì')
INSERT INTO DOCENTE VALUES('05','STEFANO','OSSICINI')
INSERT INTO DOCENTE VALUES('06','MARIA','RIMINI')
GO

INSERT INTO STUDENTE VALUES('601','ALESSANDRO','CHARALAMBIS')
INSERT INTO STUDENTE VALUES('602','RAFFAELE','CONIGLIO')
INSERT INTO STUDENTE VALUES('603','MARIA VITTORIA','GRANDI')
INSERT INTO STUDENTE VALUES('604','GIOVANNI','CAMBI')
INSERT INTO STUDENTE VALUES('605','FABRIZIO','FERRARESI')
INSERT INTO STUDENTE VALUES('606','VITOALBERTO','BARLETTA')
INSERT INTO STUDENTE VALUES('607','ANDREA','MALAGOLI')
INSERT INTO STUDENTE VALUES('608','FEDERICO','BINI')
INSERT INTO STUDENTE VALUES('609','ALESSIA','BAGNOLI')
GO

INSERT INTO ARGOMENTO VALUES('F1','FISICA')
INSERT INTO ARGOMENTO VALUES('A1','ANALISI')
INSERT INTO ARGOMENTO VALUES('B1','BASI DI DATI')
INSERT INTO ARGOMENTO VALUES('E1','ELETTROTECNICA')
INSERT INTO ARGOMENTO VALUES('I1','IMPIANTI INDUSTRIALI')
INSERT INTO ARGOMENTO VALUES('ECO1','FONDAMENTI DI ECONOMIA AZIENDALE')
INSERT INTO ARGOMENTO VALUES('F2','FISICA')
GO

SET DATEFORMAT ymd  /*utilizzo per le date il formato anno(y)-mese(m)-giorno(d)*/

INSERT INTO LEZIONE VALUES('A1','2013-05-12','02','20')
INSERT INTO LEZIONE VALUES('I1','2013-05-17','06','38')
INSERT INTO LEZIONE VALUES('B1','2013-05-19','03','60')
INSERT INTO LEZIONE VALUES('F1','2013-05-21','01','42')
INSERT INTO LEZIONE VALUES('F2','2013-05-05','01','17')
INSERT INTO LEZIONE VALUES('F1','2013-05-11','05','5')
INSERT INTO LEZIONE VALUES('E1','2013-05-9','05','18')
INSERT INTO LEZIONE VALUES('ECO1','2013-05-13','04','26')
INSERT INTO LEZIONE VALUES('F1','2013-05-29','01','42')
INSERT INTO LEZIONE VALUES('F1','2013-05-30','01','42')

INSERT INTO INTERROGAZIONE VALUES('A1','2013-05-12','601','20')
INSERT INTO INTERROGAZIONE VALUES('B1','2013-05-19','601','30')
INSERT INTO INTERROGAZIONE VALUES('E1','2013-05-09','601','24')
INSERT INTO INTERROGAZIONE VALUES('F1','2013-05-11','602','25')
INSERT INTO INTERROGAZIONE VALUES('F1','2013-05-11','604','21')
INSERT INTO INTERROGAZIONE VALUES('F1','2013-05-11','603','20')
INSERT INTO INTERROGAZIONE VALUES('B1','2013-05-19','606','18')
INSERT INTO INTERROGAZIONE VALUES('ECO1','2013-05-13','607','18')
INSERT INTO INTERROGAZIONE VALUES('I1','2013-05-17','603','28')
INSERT INTO INTERROGAZIONE VALUES('I1','2013-05-17','604','33')
INSERT INTO INTERROGAZIONE VALUES('F1','2013-05-21','602','18')
INSERT INTO INTERROGAZIONE VALUES('F1','2013-05-29','602','28')
INSERT INTO INTERROGAZIONE VALUES('F1','2013-05-30','602','33')


/*
Visualizzo il contenuto delle tabelle
*/

SELECT * FROM DOCENTE

SELECT * FROM ARGOMENTO

SELECT * FROM LEZIONE

SELECT * FROM STUDENTE

SELECT *FROM INTERROGAZIONE

/*
Nel seguito si riportano le soluzioni delle query numerate come sul libro
*/

/*
a) Selezionare il codice fiscale, il nome ed il cognome degli studenti che non sono mai stati interrogati
	su un argomento con descrizione 'Fisica'
*/

/*Soluzione libro*/

SELECT *
FROM STUDENTE
WHERE NOT EXISTS
(
SELECT *
FROM INTERROGAZIONE,ARGOMENTO
WHERE dbo.STUDENTE.CFSTUD=INTERROGAZIONE.CFSTUD
AND ARGOMENTO.CODARG=INTERROGAZIONE.CODARG
AND ARGOMENTO.DESCRIZIONE='FISICA'
)


/*
b) Selezionare il codice fiscale del docente che ha svolto lezioni su tutti gli argomenti con descrizione 'Fisica'
*/

/*Soluzione libro*/

SELECT DISTINCT CFDOC
FROM LEZIONE X
WHERE NOT EXISTS ( SELECT *
					FROM ARGOMENTO
					WHERE DESCRIZIONE='FISICA'
					AND NOT EXISTS(SELECT *	
									FROM LEZIONE Y
									WHERE X.CFDOC=Y.CFDOC
									AND ARGOMENTO.CODARG=Y.CODARG))

/*Soluzione alternativa*/
								
SELECT DOCENTE.CFDOC
FROM DOCENTE 
WHERE NOT EXISTS(SELECT *
					FROM LEZIONE 
					WHERE DOCENTE.CFDOC=LEZIONE.CFDOC
					AND NOT EXISTS ( SELECT *
										FROM ARGOMENTO 
										WHERE  LEZIONE.CODARG=ARGOMENTO.CODARG
										AND ARGOMENTO.DESCRIZIONE='FISICA')
										)
/*
c) Selezionare il codice fiscale del docente che ha sempre interrogato, cioè che durante
	ogni sua lezione ha fatto almeno un'interrogazione
*/

/*Soluzione libro*/

SELECT L1.CFDOC
FROM LEZIONE L1
WHERE NOT EXISTS( SELECT *
					FROM LEZIONE L2
					WHERE L1.CFDOC=L2.CFDOC
					AND NOT EXISTS(SELECT *	
									FROM INTERROGAZIONE I
									WHERE L2.DATA=I.DATA
									AND L2.CODARG=I.CODARG))

/*
d) Selezionare per ogni argomento la media dei voti riportati 
	dagli studenti interrogati sull'argomento,considerando solo
	gli studenti che sono stati interrogati almeno tre volte sull'argomento in questione
*/

/*Soluzione libro*/

SELECT X.CODARG,AVG(VOTO) AS MEDIA,CFSTUD
FROM INTERROGAZIONE X
WHERE 3<=ALL( SELECT COUNT(*)
				FROM INTERROGAZIONE Y
				WHERE Y.CODARG=X.CODARG
				AND Y.CFSTUD=X.CFSTUD)
				GROUP BY CODARG,CFSTUD
				
				
/*
e) Selezionare, per ogni studente, il codice fiscale del docente con il quale ha effettuato il maggior
	numero di interrogazioni
*/

/*Soluzione libro*/					

SELECT I1.CFSTUD,LEZIONE.CFDOC
FROM LEZIONE,INTERROGAZIONE I1
WHERE I1.CODARG=LEZIONE.CODARG
AND I1.DATA=LEZIONE.DATA
GROUP BY I1.CFSTUD,LEZIONE.CFDOC
HAVING COUNT(*) >= ALL ( SELECT COUNT(*)
							FROM LEZIONE , INTERROGAZIONE I2
							WHERE LEZIONE.CODARG=I2.CODARG
							AND LEZIONE.DATA=I2.DATA
							AND I1.CFSTUD=I2.CFSTUD
							GROUP BY I2.CFSTUD,LEZIONE.CFDOC)

